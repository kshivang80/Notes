
1)How do you add CSS to an HTML webpage?

 => There are three ways of inserting a style sheet:
 External CSS
 Internal CSS
 Inline CSS

2) What does CSS stand for?

 => Cascading Style Sheets

3) What does HTML stand for?

=> Hypertext Markup Language

4) What are the features of HTML5?

=> Intro of audio and video:
   It allows developers to embed a video or audio on their website. HTML5 video can use CSS and CSS3 to style the video tag. 

=> Header and Footer
     With these new tags, there is no longer a need to identify the two elements with a <div> tag. Footer is placed at the end of the web page while Header is placed at the start of the web page. By using <header> and <footer> HTML5 elements, the browser will know what to load first and what to load later. 
  

=> Figure and Figcaption
   HTML5 allows to use a <figure> element to mark up a photo in a document, and a <figcaption> element to define a caption for the photo.

=> Nav tag:
   The <nav> tag defines a set of navigation links. It is used for the part of an internet site that links to different pages at the website.

=> Progress tag:
   The progress tag is used to check the progress of a task during the execution. Progress tag can be used with the conjunction of JavaScript.



5) What are the different types of storage in HTML5? 

The web storage is more secure and large amounts of data can be stored locally on the client-side web browser. All the data is stored in key-value pairs.

 => In HTML5 there are two types of web storage API.
 a) localStorage
 b) SessionStorage

a) localStorage
It is used to store data on the client-side. It has no expiration time, so the data in the LocalStorage exists always till the user manually deletes it.

LocalStorage.setItem("key", "value"); 


b) Session Storage
 It is used to store data on the client-side. Data in the SessionStorage exist till the current tab is open, if we close the current tab then our data will also erase automatically from the SessionStorage.

SessionStorage.setItem("key", "value"); 




6)  What do the following mean in html 
 
    <section>
    <article>
    <footer>
    <nav>
    <aside> .

 =>  What is HTML Semantics?
     The core characteristic of a semantic element is that it clearly communicated its meaning to both the developer and the browser. These elements clearly define its content. 

Semantics refers to the meaning of a piece of code .

## HTML Semantic Tag Structure
   The following HTML tags can be used to break your page into identified parts:

<header>: It defines a header for a web page.
<nav>: It defines a container for navigation links.
<section>: This defines a section in a web page.
<article>: This element contains the main part, containing information about the web page.
<aside>: The <aside> content is often placed as a sidebar in a document.
<footer>: It defines a footer for a document or a section.




7) What are forms in HTML?

<form> is a HTML element to collect input data with containing interactive controls. It provides facilities to input text, number, values, email, password, and control fields such as checkboxes, radio buttons, submit buttons, etc., or in other words, form is a container that contains input elements like text, email, number, radio buttons, checkboxes, submit buttons, etc. Forms are generally used when you want to collect data from the user. For example, a user wants to buy a bag online, so he/she has to first enter their shipping address in the address form and then add their payment details in the payment form to place an order.



<form>
    <p>
      <label>Username : <input type="text" /></label>
    </p>
 
    <p>
      <label>Password : <input type="password" /></label>
    </p>

     <p>
       <button type="submit">Submit</button>
    </p>
</form>



8) What are event listeners in HTML?


An event is an important part of JavaScript.A web page responds according to an event that occurred. Some events are user generated and some are generated by API. Event listeners are functions or code snippets in HTML that listen for specific events. A simple example of an event is a user clicking the mouse or pressing a key on the keyboard.

The addEventListener() is an inbuilt function in JavaScript which takes the event to listen for, and a second argument to be called whenever the described event gets fired. Any number of event handlers can be added to a single element without overwriting existing event handlers. 



9) what is onload event?

=>The onload event occurs when an object has been loaded.

 The onload event is mostly used within the <body> tag, in order to run the script on the web page that will load all the content completely. The onload event can be used to check the user’s browser type and browser version, and load the version of the web page based on the information. The onload event can also be used for cookies. 


10) What is scroll event?

=> The onscroll event in JavaScript occurs when a scrollbar is used for an element. The event is fired when the user moves the scrollbar up or down. We can use the CSS overflow property for creating a scrollbar.


11) How do you use Geo Location API?

   => The HTML Geolocation API is used to get the geographical position of a user.


12) How do you know if a user is offline or not? What API does the browser provide for that?


=> Navigator.onLine,Returns the online status of the browser. The property returns a boolean value, with true meaning online and false meaning offline. 


13) How do you use Video and Audio tags?

=> <audio controls>
  <source src="horse.ogg" type="audio/ogg">
  <source src="horse.mp3" type="audio/mpeg">
  Your browser does not support the audio tag.
  </audio>

<video width="320" height="240" controls>
  <source src="movie.mp4" type="video/mp4">
  <source src="movie.ogg" type="video/ogg">
  Your browser does not support the video tag.
</video>




||||||||||||||||||||||| CSS  |||||||||||||||||||||||||||||||||||


1) What are CSS selectors?

=> CSS selectors are used to select the content you want to style.

There are many basic different types of selectors.

Element Selector   = p {color: blue;}
Id Selector        = .highlight { background-color: yellow;}
Class Selector     = #header {  font-size: 24px;}
Universal Selector = input[type="text"] {border: 1px solid gray;}
Group Selector     =
Attribute Selector
Pseudo-Class Selector   = p::first-line { text-transform: uppercase;}
Pseudo-Element Selector  


2) What are CSS variables?

=> CSS variables, also known as custom properties, are a feature in CSS that allow developers to define reusable values that can be used throughout a stylesheet.

CSS variables are declared using the -- prefix followed by a variable name, and are defined within a selector block or at the root level of the stylesheet. The value of a CSS variable can then be referenced using the var() function, which accepts the variable name as its argument.


:root {
  --primary-color: #007bff;
}

.button {
  background-color: var(--primary-color);
  color: white;
}

3) What is the difference between position absolute and relative?

=> Relative Position:
 Setting the top, right, bottom, and left properties of an element with position: relative; property will cause it to adjust from its normal position. The other objects or elements will not fill the gap.

=> Absolute Position: 
An element with position: absolute; will cause it to adjust its position with respect to its parent or nearest ancestor. If no parent is present, then it uses the document body as parent.

=> Position fixed
The property applied to an element will cause it to always stay in the same place even if the page is scrolled. To position the element we use top, right, bottom, left properties.


4) What is Box Model?

=> The CSS box model is a container that contains multiple properties including borders, margin, padding, and the content itself. It is used to create the design and layout of web pages. It can be used as a toolkit for customizing the layout of different elements. The web browser renders every element as a rectangular box according to the CSS box model. Box-Model has multiple properties in CSS. Some of them are given below: 

Content Area: 
This area consists of content like text, images, or other media content. It is bounded by the content edge and its dimensions are given by content-box width and height.

Padding Area: 
It includes the element’s padding. This area is actually the space around the content area and within the border-box. Its dimensions are given by the width of the padding-box and the height of the padding-box.

Border Area: 
It is the area between the box’s padding and margin. Its dimensions are given by the width and height of the border.

Margin Area: 
This area consists of space between border and margin. The dimensions of the Margin area are the margin-box width and the margin-box height. It is useful to separate the element from its neighbors.



5) What is a flex-box?

=> The flexbox or flexible box model in CSS is a one-dimensional layout model that has flexible and efficient layouts with distributed spaces among items to control their alignment structure ie., it is a layout model that provides an easy and clean way to arrange items within a container.


6) What does justify-content, justifyItems, justifySelf mean?

=>  justify-content is a CSS property used to align flex items along the main axis of their container. It determines how flex items distribute free space along the main axis of the flex container. The justify-content property has several possible values, such as flex-start, flex-end, center, space-between, space-around, and space-evenly

justify-items is a CSS property used to align grid items along the inline (row) axis within their grid cell. It is used to specify the default horizontal alignment for all grid items inside a grid container. The justify-items property has several possible values, such as start, end, center, stretch, and baseline.


justifySelf:
The justify-self property aligns a grid item within its grid cell in the inline direction.the inline direction is left to right and block direction is downward.


align-items:
The align-items property specifies the default alignment for items inside a flexbox or grid container.

In a flexbox container, the flexbox items are aligned on the cross axis, which is vertical by default (opposite of flex-direction).
In a grid container, the grid items are aligned in the block direction. For pages in English, block direction is downward and inline direction is left to right.




7) What are grids?

=> The CSS Grid Layout Module offers a grid-based layout system, with rows and columns, making it easier to design web pages without having to use floats and positioning.




8) Difference Between Grid and Flexbox:

1. Dimensionality and Flexibility:

Flexbox offers greater control over alignment and space distribution between items. Being one-dimensional, Flexbox only deals with either columns or rows.

Grid has two-dimension layout capabilities which allow flexible widths as a unit of length. This compensates for the limitations in Flex.

2. Alignment:

Flex Direction allows developers to align elements vertically or horizontally, which is used when developers create and reverse rows or columns.

CSS Grid deploys fractional measure units for grid fluidity and auto-keyword functionality to automatically adjust columns or rows.

3. Item Management

Flex Container is the parent element while Flex Item represents the children. The Flex Container can ensure balanced representation by adjusting item dimensions. This allows developers to design for fluctuating screen sizes.

Grid supports both implicit and explicit content placement. Its inbuilt automation allows it to automatically extend line items and copy values into the new creation from the preceding item.


9 ) What is specificity, and how do you calculate it?

If there are two or more CSS rules that point to the same element, the selector with the highest specificity value will "win", and its style declaration will be applied to that HTML element.

a) Inline Styles: Inline styles have the highest specificity. An inline style is applied directly to an element using the style attribute. The specificity value for an inline style is 1,0,0,0.

b) IDs: IDs are more specific than classes or element selectors. Each ID selector contributes 0,1,0,0 to the specificity value.

c) Classes, Attributes, and Pseudo-classes: Classes, attributes, and pseudo-classes have the same specificity value. Each class, attribute, or pseudo-class selector contributes 0,0,1,0 to the specificity value.

d) Element Selectors: Element selectors have the lowest specificity value. Each element selector contributes 0,0,0,1 to the specificity value.


10) What are media queries?

Media queries are commonly used in modern web development to create mobile-friendly and flexible layouts that work well on different devices, such as desktops, laptops, tablets, and smartphones.


11)  What is the difference between min-width and max-width in media queries?

The min-width specifies the minimum screen width of a specific device, meanwhile, The max-width media feature states the maximum screen width of a specific device.


12 ) What are animation and keyframe ?

A keyframe, also written as “key frame,” is something that defines the starting and/or ending point of any smooth transition. That something can be a drawing in animation or a particular frame of a shot when dealing with film or video. Any shot, animated or live-action, is broken down into individual frames.




































